## Managed by Ansible
## Filename: files/docker_services/vmk_nprod_04/haproxy.cfg

global
    log stdout format raw local0 info
    fd-hard-limit 50000
    maxconn 10000

    ssl-default-bind-options ssl-min-ver TLSv1.2 prefer-client-ciphers
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM
    ssl-default-server-options ssl-min-ver TLSv1.2
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    
    timeout connect 5s
    timeout client 50s
    timeout server 50s

frontend stats
   bind :9090
   http-request use-service prometheus-exporter if { path /metrics }
   stats enable
   stats uri /stats
   stats refresh 10s

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend fe_https
    bind :443 ssl crt /usr/local/etc/certs alpn h2,http/1.1

    http-request capture req.hdrs len 512
    log-format "%ci:%cp [%tr] %ft [[%hr]] %hs %{+Q}r"

    acl host-dashboard hdr(host) -i dashboard.int.mxard.cloud
    acl host-nextcloud hdr(host) -i cloud.int.mxard.cloud
    acl url_discovery path_beg -i /.well-known/caldav /.well-known/carddav
    acl url_webfinger path_beg -i /.well-known/webfinger
    acl url_nodeinfo path_beg -i /.well-known/nodeinfo

    http-request redirect location https://%[hdr(host)]/remote.php/dav/ code 301 if url_discovery host-nextcloud
    http-request redirect location https://%[hdr(host)]/index.php/.well-known/webfinger code 301 if url_webfinger host-nextcloud
    http-request redirect location https://%[hdr(host)]/index.php/.well-known/nodeinfo code 301 if url_nodeinfo host-nextcloud

    http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains;"

    use_backend be_dashboard if host-dashboard
    use_backend be_nextcloud if host-nextcloud

    default_backend no-match

backend be_dashboard
    http-request set-header Connection keep-alive
	http-request set-header Host dashboard.int.mxard.cloud
	http-request set-header X-Forwarded-Proto https
    option httpchk GET /
	http-check send hdr Host dashboard.int.mxard.cloud
	http-check expect status 200,302
    server dashboard dashboard:80 check resolvers docker_resolver

backend be_nextcloud
    http-request set-header Connection keep-alive
	http-request set-header Host cloud.int.mxard.cloud
	http-request set-header X-Forwarded-Proto https
    option httpchk GET /
	http-check send hdr Host cloud.int.mxard.cloud
	http-check expect status 200,302
    server nextcloud nextcloud:80 check resolvers docker_resolver

backend no-match 
    mode http
    http-request deny deny_status 400

