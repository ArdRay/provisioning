## Managed by Ansible
## Filename: files/docker_services/vmk_nprod_01/haproxy.cfg

global
    log stdout format raw local0 info
    fd-hard-limit 50000
    maxconn 10000

    ssl-default-bind-options ssl-min-ver TLSv1.2 prefer-client-ciphers
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM
    ssl-default-server-options ssl-min-ver TLSv1.2
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    
    timeout connect 5s
    timeout client 50s
    timeout server 50s

frontend stats
   bind :9090
   http-request use-service prometheus-exporter if { path /metrics }
   stats enable
   stats uri /stats
   stats refresh 10s

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend fe_postgres_portfolio
    mode tcp
    option tcplog
    timeout client  1m
    bind :5432
    default_backend be_postgres_portfolio

frontend fe_https
    bind :443 ssl crt /usr/local/etc/certs alpn h2,http/1.1

    http-request capture req.hdrs len 512
    log-format "%ci:%cp [%tr] %ft [[%hr]] %hs %{+Q}r"

    acl host-prometheus hdr(host) -i prometheus.int.mxard.cloud
    acl host-grafana hdr(host) -i grafana.int.mxard.cloud
    acl host-uptime hdr(host) -i uptime.int.mxard.cloud

    use_backend be_prometheus if host-prometheus
    use_backend be_grafana if host-grafana
    use_backend be_uptime if host-uptime
    default_backend no-match

backend be_postgres_portfolio
    mode tcp
    server postgres_portfolio postgres_portfolio:5432 resolvers docker_resolver

backend be_prometheus
    http-request set-header Connection keep-alive
	http-request set-header Host prometheus.int.mxard.cloud
	http-request set-header X-Forwarded-Proto https
    option httpchk GET /
	http-check send hdr Host prometheus.int.mxard.cloud
	http-check expect status 200,302
    server prometheus prometheus:9090 check resolvers docker_resolver

backend be_grafana
    http-request set-header Connection keep-alive
    http-request set-header Host grafana.int.mxard.cloud
    http-request set-header X-Forwarded-Proto https
    option httpchk GET /
    http-check send hdr Host grafana.int.mxard.cloud
    http-check expect status 200,302
    server grafana grafana:3000 check resolvers docker_resolver

backend be_uptime
    option httpchk GET /dashboard
    http-check expect status 200,302
    timeout client-fin 2m
    timeout tunnel 30m
    server uptime uptime:3001 check resolvers docker_resolver

backend no-match 
    mode http
    http-request deny deny_status 400
