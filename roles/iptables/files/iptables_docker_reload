#!/bin/bash
## Reload iptables without destroying docker
## Remember to use DOCKER-USER to filter (bridge) docker networks
## using iptables-save | sed 's/\[.*\]/[0:0]/' to ignore packet counts in diff

CHAINS=(DOCKER DOCKER-ISOLATION-STAGE-1 DOCKER-ISOLATION-STAGE-2)

function iptables_docker_save {
  iptables-save -t nat | sed 's/\[.*\]/[0:0]/' > $DIR/iptables.nat
  (
    echo "## Generated by iptables_docker_reload"
    ## the egrep filter should catch all and only FORWARD rules by docker
    iptables -S FORWARD | egrep "DOCKER|docker|br-"
    for CHAIN in ${CHAINS[@]} ; do
      iptables -S $CHAIN
    done
  ) | egrep -v '^-N|^-P' > $DIR/iptables.docker
}

function iptables_docker_load {
  (
    ## skip FORWARD and do not COMMIT
    cat /etc/sysconfig/iptables | grep -v '^COMMIT' | grep -v "^-A FORWARD"
    for CHAIN in ${CHAINS[@]} ; do echo ":$CHAIN - [0:0]"; done
    cat $DIR/iptables.docker | egrep -v '^-N|^-P'
    ## Append any non-docker FORWARD rule from
    cat /etc/sysconfig/iptables | grep '^-A FORWARD'
    echo 'COMMIT'
    echo
    cat $DIR/iptables.nat
  ) > $TMPFILE
  iptables-restore -t $TMPFILE && iptables-restore -v $TMPFILE
}

DIR='/var/lib/iptables'
mkdir -p $DIR
#cd $DIR || exit 1
TMPFILE=$DIR/iptables.tmp
SAVEFILE=$DIR/iptables.$(date +%s)_save
NEWFILE=$DIR/iptables.$(date +%s)_new

## safeguard full current state
iptables-save | sed 's/\[.*\]/[0:0]/' > $SAVEFILE

if [ $(/sbin/pidof dockerd) ] ; then
  ## save current docker iptables rules
  iptables_docker_save
  ## load new iptables file and docker rules
  if ! iptables_docker_load ;then
    echo "reload of $TMPFILE failed, please check"
    echo "restoring original $SAVEFILE"
    iptables-restore -v $SAVEFILE
    exit 1
  fi
  rm $TMPFILE
  iptables-save | sed 's/\[.*\]/[0:0]/' > $NEWFILE
  diff -u -I '^# Completed' -I'^# Generated' $SAVEFILE $NEWFILE
  echo "iptables_docker_reload: done $NEWFILE"
else
  ## no messy Docker around, just reload as normal
  if [[ -x /usr/bin/systemctl ]]; then
    systemctl reload iptables
  else
    service iptables reload
  fi
fi
